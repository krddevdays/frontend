name: 'Docker Image CI'

on: push

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get node version
        id: node_version
        run: |
          echo "::set-output name=version::$(cat .node-version)"

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.node_version.outputs.version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npx next lint
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_IAM_SERVICE_ACCOUNT_AUTH_KEYS }}

      - name: Generate version
        id: version
        run: |
          export BRANCH=${GITHUB_REF#refs/heads/};
          export BRANCH=${BRANCH#refs/tags/};
          export BRANCH=${BRANCH//\//-};
          export BRANCH=${BRANCH//./-};
          export VERSION=$BRANCH.$(date +%s).${GITHUB_SHA:0:8};
          echo "::set-output name=name::$VERSION"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: cr.yandex/crptsm0vtuj4fltqor20/frontend:${{ steps.version.outputs.name }}
          build-args: |
            SENTRY_URL=${{ secrets.SENTRY_URL }}
            SENTRY_ORG=${{ secrets.SENTRY_ORG }}
            SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }}
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
